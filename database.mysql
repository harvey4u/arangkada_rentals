-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1:3308
-- Generation Time: May 26, 2025
-- Server version: 10.4.32-MariaDB
-- PHP Version: 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";

-- Character set settings
/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `car_rental_system`
--

-- --------------------------------------------------------

--
-- Table structure for table `roles`
--

CREATE TABLE IF NOT EXISTS `roles` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL UNIQUE,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Table structure for table `roles`
--

CREATE TABLE IF NOT EXISTS `roles` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL UNIQUE,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `roles`
--

INSERT IGNORE INTO `roles` (`id`, `name`) VALUES
(1, 'superadmin'),
(2, 'admin'),
(3, 'staff'),
(4, 'client'),
(5, 'driver');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE IF NOT EXISTS `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL UNIQUE,
  `first_name` VARCHAR(50),
  `last_name` VARCHAR(50),
  `password` varchar(255) NOT NULL,
  `email` varchar(100) NOT NULL UNIQUE,
  `phone` VARCHAR(20),
  `address` TEXT,
  `profile_picture` VARCHAR(255),
  `date_of_birth` DATE,
  `gender` ENUM('male','female','other'),
  `status` ENUM('active','inactive','banned') NOT NULL DEFAULT 'active',
  `last_login` DATETIME,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `verification_code` varchar(6) DEFAULT NULL,
  `verification_expires_at` datetime DEFAULT NULL,
  `is_verified` tinyint(1) DEFAULT 0,
  `role_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `fk_users_role` (`role_id`),
  CONSTRAINT `fk_users_role` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `users`
--

INSERT IGNORE INTO `users` (`id`, `username`, `password`, `email`, `created_at`, `verification_code`, `verification_expires_at`, `is_verified`, `role_id`) VALUES
(1, 'superadmin', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'superadmin@example.com', '2025-05-24 11:10:05', NULL, NULL, 0, NULL),
(2, 'admin', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'admin@example.com', '2025-05-24 11:10:05', NULL, NULL, 0, NULL),
(4, 'renter', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'renter@example.com', '2025-05-24 11:10:05', NULL, NULL, 0, NULL),
(5, 's', '$2y$10$6R4rkdKY6MHwvaAFQ1hUiuggmQQ4mrjbODS/AEydm5L4O41F1y7V2', 'hontiverosharvey04@gmail.com', '2025-05-25 11:55:58', NULL, NULL, 1, NULL),
(6, 'eljhun', '$2y$10$vuR411I/cIGY1/rA1cGL0uJWcBcIv/a0H8wroWSRKnMeSD9rRUg0.', 'gmeljhun20@gmail.com', '2025-05-25 12:02:48', NULL, NULL, 1, NULL);

-- Add users for each role with username and password same as role name
INSERT IGNORE INTO `users` (`username`, `password`, `email`, `created_at`, `is_verified`, `role_id`)
VALUES
('superadmin', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'superadmin@demo.com', NOW(), 1, 1),
('admin', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'admin@demo.com', NOW(), 1, 2),
('staff', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'staff@demo.com', NOW(), 1, 3),
('client', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'client@demo.com', NOW(), 1, 4),
('driver', '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', 'driver@demo.com', NOW(), 1, 5);

-- --------------------------------------------------------

--
-- Table structure for table `user_roles`
--

CREATE TABLE IF NOT EXISTS `user_roles` (
  `user_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  PRIMARY KEY (`user_id`, `role_id`),
  KEY `role_id` (`role_id`),
  CONSTRAINT `user_roles_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE,
  CONSTRAINT `user_roles_ibfk_2` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `user_roles`
--

INSERT IGNORE INTO `user_roles` (`user_id`, `role_id`) VALUES
(1, 1),
(2, 2),
(4, 4),
(5, 4),
(6, 4);

-- Assign roles in user_roles table
INSERT IGNORE INTO `user_roles` (`user_id`, `role_id`)
SELECT id, role_id FROM users WHERE username IN ('superadmin', 'admin', 'staff', 'client', 'driver');

-- --------------------------------------------------------

--
-- Table structure for table `cars`
--

CREATE TABLE IF NOT EXISTS `cars` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `make` varchar(50) NOT NULL,
  `model` varchar(50) NOT NULL,
  `color` VARCHAR(30),
  `mileage` INT,
  `transmission` ENUM('automatic','manual'),
  `fuel_type` ENUM('gasoline','diesel','electric','hybrid'),
  `seats` INT,
  `year` int(11) NOT NULL,
  `price_per_day` decimal(10,2) NOT NULL CHECK (`price_per_day` >= 0),
  `available` tinyint(1) NOT NULL DEFAULT 1,
  `image` varchar(255) DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `plate_number` varchar(20) DEFAULT NULL,
  `status` enum('available','rented','maintenance') DEFAULT 'available',
  `category_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `cars`
--

INSERT IGNORE INTO `cars` (`id`, `make`, `model`, `year`, `price_per_day`, `available`, `image`, `created_at`, `plate_number`, `status`) VALUES
(1, 'Toyota', 'Camry', 2020, 50.00, 1, 'camry.jpg', '2025-05-24 11:10:06', NULL, 'available'),
(2, 'Honda', 'Civic', 2019, 45.00, 1, 'civic.jpg', '2025-05-24 11:10:06', NULL, 'available'),
(3, 'Ford', 'Mustang', 2021, 80.00, 1, 'mustang.jpg', '2025-05-24 11:10:06', NULL, 'available'),
(4, 'Chevrolet', 'Malibu', 2018, 40.00, 1, 'malibu.jpg', '2025-05-24 11:10:06', NULL, 'available');

-- --------------------------------------------------------

--
-- Table structure for table `car_categories`
--

CREATE TABLE IF NOT EXISTS `car_categories` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `description` text DEFAULT NULL,
  `base_price` decimal(10,2) NOT NULL DEFAULT 0.00,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Add foreign key to cars table for category_id
--

ALTER TABLE `cars`
  ADD CONSTRAINT `fk_cars_category` FOREIGN KEY (`category_id`) REFERENCES `car_categories` (`id`) ON DELETE SET NULL;

--
-- Dumping data for table `car_categories`
--

INSERT IGNORE INTO `car_categories` (`id`, `name`, `description`, `base_price`) VALUES
(1, 'Economy', 'Affordable and fuel-efficient vehicles suitable for daily commuting and basic transportation needs.', 40.00),
(2, 'Luxury', 'Premium vehicles offering superior comfort, advanced features, and exceptional performance.', 80.00),
(3, 'SUV', 'Spacious vehicles ideal for family trips and outdoor adventures with ample cargo space.', 60.00),
(4, 'Sports', 'High-performance vehicles designed for speed and handling, perfect for enthusiasts.', 100.00);

-- --------------------------------------------------------

--
-- Table structure for table `rentals`
--

CREATE TABLE IF NOT EXISTS `rentals` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `client_id` int(11) NOT NULL,
  `car_id` int(11) NOT NULL,
  `start_date` date NOT NULL,
  `end_date` date NOT NULL,
  `total_price` decimal(10,2) NOT NULL CHECK (`total_price` >= 0),
  `status` enum('active','completed','cancelled','scheduled') NOT NULL DEFAULT 'active',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `driver_id` int(11) DEFAULT NULL,
  `driver_fee` decimal(10,2) DEFAULT 0.00,
  `driver_rating` decimal(3,1) DEFAULT NULL,
  `rental_duration` int(11) NOT NULL DEFAULT 1,
  `rental_start_date` datetime DEFAULT NULL,
  `payment_status` ENUM('pending','paid','failed','refunded') NOT NULL DEFAULT 'pending',
  `pickup_location` VARCHAR(255),
  `dropoff_location` VARCHAR(255),
  `notes` TEXT,
  `reservation_code` VARCHAR(20) NOT NULL UNIQUE,
  `start_time` TIME DEFAULT NULL,
  `end_time` TIME DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `car_id` (`car_id`),
  KEY `client_id` (`client_id`),
  CONSTRAINT `rentals_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE,
  CONSTRAINT `rentals_ibfk_2` FOREIGN KEY (`car_id`) REFERENCES `cars` (`id`) ON DELETE CASCADE,
  CONSTRAINT `rentals_ibfk_3` FOREIGN KEY (`driver_id`) REFERENCES `users` (`id`) ON DELETE SET NULL,
  CONSTRAINT `rentals_ibfk_4` FOREIGN KEY (`client_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `rentals`
--

INSERT IGNORE INTO `rentals` (`id`, `user_id`, `client_id`, `car_id`, `start_date`, `end_date`, `total_price`, `status`, `created_at`, `driver_id`, `driver_fee`, `driver_rating`, `rental_duration`, `rental_start_date`) VALUES
(1, 4, 4, 1, '2023-10-01', '2023-10-05', 200.00, 'completed', '2025-05-24 11:10:06', NULL, 0.00, NULL, 1, NULL),
(2, 4, 4, 2, '2023-10-10', '2023-10-15', 225.00, 'active', '2025-05-24 11:10:06', NULL, 0.00, NULL, 1, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `driver_availability`
--

CREATE TABLE IF NOT EXISTS `driver_availability` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `driver_id` int(11) NOT NULL,
  `day_of_week` enum('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday') NOT NULL,
  `available_from` time NOT NULL,
  `available_to` time NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `driver_id` (`driver_id`),
  CONSTRAINT `driver_availability_ibfk_1` FOREIGN KEY (`driver_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- --------------------------------------------------------

--
-- Table structure for table `driver_details`
--

CREATE TABLE IF NOT EXISTS `driver_details` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `license_number` varchar(50) NOT NULL,
  `license_expiry` date NOT NULL,
  `contact_number` varchar(20) NOT NULL,
  `address` text NOT NULL,
  `status` enum('active','inactive','suspended') NOT NULL DEFAULT 'active',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id` (`user_id`),
  CONSTRAINT `driver_details_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- --------------------------------------------------------

--
-- Table structure for table `driver_applications`
--

CREATE TABLE IF NOT EXISTS `driver_applications` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `license_number` varchar(50) NOT NULL,
  `license_expiry` date NOT NULL,
  `contact_number` varchar(20) NOT NULL,
  `address` text NOT NULL,
  `status` enum('pending','approved','rejected') NOT NULL DEFAULT 'pending',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `driver_applications_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- --------------------------------------------------------

--
-- Table structure for table `maintenance_requests`
--

CREATE TABLE IF NOT EXISTS `maintenance_requests` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `car_id` int(11) NOT NULL,
  `description` text NOT NULL,
  `status` enum('pending','in_progress','completed','cancelled') NOT NULL DEFAULT 'pending',
  `requested_by` int(11) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `cost` DECIMAL(10,2) DEFAULT 0.00,
  `completed_at` DATETIME,
  PRIMARY KEY (`id`),
  KEY `car_id` (`car_id`),
  KEY `requested_by` (`requested_by`),
  CONSTRAINT `maintenance_requests_ibfk_1` FOREIGN KEY (`car_id`) REFERENCES `cars` (`id`) ON DELETE CASCADE,
  CONSTRAINT `maintenance_requests_ibfk_2` FOREIGN KEY (`requested_by`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- --------------------------------------------------------

--
-- Table structure for table `support_tickets`
--

CREATE TABLE IF NOT EXISTS `support_tickets` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `subject` varchar(255) NOT NULL,
  `message` text NOT NULL,
  `status` enum('open','in_progress','closed') NOT NULL DEFAULT 'open',
  `priority` enum('low','medium','high') NOT NULL DEFAULT 'medium',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `assigned_to` INT DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `idx_support_tickets_user_id` (`user_id`),
  KEY `idx_support_tickets_status` (`status`),
  CONSTRAINT `support_tickets_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE,
  CONSTRAINT `fk_support_tickets_assigned_to` FOREIGN KEY (`assigned_to`) REFERENCES `users`(`id`) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- --------------------------------------------------------

--
-- Table structure for table `support_ticket_responses`
--

CREATE TABLE IF NOT EXISTS `support_ticket_responses` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ticket_id` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `message` text NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `ticket_id` (`ticket_id`),
  KEY `user_id` (`user_id`),
  CONSTRAINT `support_ticket_responses_ibfk_1` FOREIGN KEY (`ticket_id`) REFERENCES `support_tickets` (`id`) ON DELETE CASCADE,
  CONSTRAINT `support_ticket_responses_ibfk_2` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- --------------------------------------------------------

--
-- Table structure for table `notifications`
--

CREATE TABLE IF NOT EXISTS `notifications` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `message` text NOT NULL,
  `type` varchar(50) NOT NULL,
  `is_read` tinyint(1) DEFAULT 0,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `idx_notifications_user_id` (`user_id`),
  KEY `idx_notifications_is_read` (`is_read`),
  CONSTRAINT `notifications_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- --------------------------------------------------------

--
-- Table structure for table `rental_analytics`
--

CREATE TABLE IF NOT EXISTS `rental_analytics` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `rental_id` int(11) NOT NULL,
  `revenue` decimal(10,2) NOT NULL,
  `rental_duration` int(11) NOT NULL,
  `car_category_id` int(11) DEFAULT NULL,
  `has_driver` tinyint(1) DEFAULT 0,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `rental_id` (`rental_id`),
  KEY `car_category_id` (`car_category_id`),
  CONSTRAINT `rental_analytics_ibfk_1` FOREIGN KEY (`rental_id`) REFERENCES `rentals` (`id`) ON DELETE CASCADE,
  CONSTRAINT `rental_analytics_ibfk_2` FOREIGN KEY (`car_category_id`) REFERENCES `car_categories` (`id`) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- --------------------------------------------------------

--
-- Table structure for table `revenue_summary`
--

CREATE TABLE IF NOT EXISTS `revenue_summary` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `date` date NOT NULL,
  `daily_revenue` decimal(10,2) NOT NULL DEFAULT 0.00,
  `rental_count` int(11) NOT NULL DEFAULT 0,
  `driver_revenue` decimal(10,2) NOT NULL DEFAULT 0.00,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `date` (`date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- --------------------------------------------------------

--
-- Drop existing views if they exist
--

DROP VIEW IF EXISTS `monthly_revenue_view`;
DROP VIEW IF EXISTS `car_performance_view`;
DROP VIEW IF EXISTS `driver_performance_view`;

--
-- View structure for `monthly_revenue_view`
--

CREATE VIEW `monthly_revenue_view` AS
SELECT
    DATE_FORMAT(r.created_at, '%Y-%m') as month,
    COUNT(*) as total_rentals,
    SUM(r.total_price) as total_revenue,
    AVG(r.total_price) as average_rental_price,
    COUNT(DISTINCT r.car_id) as unique_cars_rented,
    COUNT(DISTINCT r.client_id) as unique_customers
FROM rentals r
GROUP BY DATE_FORMAT(r.created_at, '%Y-%m')
ORDER BY month DESC;

-- --------------------------------------------------------

--
-- View structure for `car_performance_view`
--

CREATE VIEW `car_performance_view` AS
SELECT
    c.id as car_id,
    c.make,
    c.model,
    c.year,
    COUNT(r.id) as total_rentals,
    SUM(r.total_price) as total_revenue,
    AVG(r.total_price) as avg_revenue_per_rental,
    c.status as current_status,
    cc.name as category
FROM cars c
LEFT JOIN rentals r ON c.id = r.car_id
LEFT JOIN car_categories cc ON c.category_id = cc.id
GROUP BY c.id;

-- --------------------------------------------------------

--
-- View structure for `driver_performance_view`
--

CREATE VIEW `driver_performance_view` AS
SELECT
    u.id as driver_id,
    u.username,
    COUNT(r.id) as total_trips,
    AVG(r.driver_rating) as average_rating,
    SUM(r.driver_fee) as total_earnings,
    COUNT(CASE WHEN r.status = 'completed' THEN 1 END) as completed_trips,
    COUNT(CASE WHEN r.status = 'cancelled' THEN 1 END) as cancelled_trips
FROM users u
JOIN user_roles ur ON u.id = ur.user_id
JOIN rentals r ON u.id = r.driver_id
WHERE ur.role_id = 5 -- driver role
GROUP BY u.id;

-- --------------------------------------------------------

--
-- Drop existing trigger if exists
--

DROP TRIGGER IF EXISTS after_rental_complete;

--
-- Triggers for analytics
--

DELIMITER //

CREATE TRIGGER after_rental_complete
AFTER UPDATE ON rentals
FOR EACH ROW
BEGIN
    IF NEW.status = 'completed' AND OLD.status != 'completed' THEN
        -- Insert into rental_analytics
        INSERT INTO rental_analytics (
            rental_id,
            revenue,
            rental_duration,
            car_category_id,
            has_driver
        )
        SELECT
            NEW.id,
            NEW.total_price,
            DATEDIFF(NEW.end_date, NEW.start_date),
            c.category_id,
            CASE WHEN NEW.driver_id IS NOT NULL THEN 1 ELSE 0 END
        FROM cars c
        WHERE c.id = NEW.car_id;

        -- Update revenue summary
        INSERT INTO revenue_summary (date, daily_revenue, rental_count, driver_revenue)
        VALUES (
            DATE(NEW.created_at),
            NEW.total_price,
            1,
            COALESCE(NEW.driver_fee, 0)
        )
        ON DUPLICATE KEY UPDATE
            daily_revenue = daily_revenue + NEW.total_price,
            rental_count = rental_count + 1,
            driver_revenue = driver_revenue + COALESCE(NEW.driver_fee, 0);
    END IF;
END //

DELIMITER ;

-- --------------------------------------------------------

--
-- Drop existing indexes if they exist
--

DROP INDEX IF EXISTS idx_rentals_created_at ON rentals;
DROP INDEX IF EXISTS idx_rentals_status ON rentals;
DROP INDEX IF EXISTS idx_revenue_summary_date ON revenue_summary;

--
-- Create indexes for analytics tables
--

CREATE INDEX idx_rentals_created_at ON rentals(created_at);
CREATE INDEX idx_rentals_status ON rentals(status);
CREATE INDEX idx_revenue_summary_date ON revenue_summary(date);

-- --------------------------------------------------------

--
-- Final SQL settings
--

COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
